.{
    .name = .libversion,
    .version = "3.0.3",
    .fingerprint = 0x682f100c2d876e62, // Changing this has security and trust implications.
    .minimum_zig_version = "0.14.0",
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        .libversion = .{
            .url = "https://github.com/repology/libversion/archive/refs/tags/3.0.3.zip",
            .hash = "N-V-__8AAHCOAQBuW5WxnWnp5ig86o6dox4RkwihpwH8LCAP",
        },
        //
        //    // This is computed from the file contents of the directory of files that is
        //    // obtained after fetching `url` and applying the inclusion rules given by
        //    // `paths`.
        //    //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant and therefore not
        //    // computed. This field and `url` are mutually exclusive.
        //    .path = "foo",
        //
        //    // When this is set to `true`, a package is declared to be lazily
        //    // fetched. This makes the dependency only get fetched if it is
        //    // actually used.
        //    .lazy = false,
        //},
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        "LICENSE",
        "README.md",
    },
}
